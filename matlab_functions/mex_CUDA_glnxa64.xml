<?xml version="1.0" encoding="UTF-8" ?>
<config
    Name="nvcc"
    ShortName="nvcc"
    HostCompiler="g++"    
    Manufacturer="NVIDIA"
    Version="XXX_CUDA_VER"
    Language="CUDA"
    Priority="A"
    Location="$NVCC" >
    <Details
          CompilerExecutable="$CXX"
          CompilerDefines="$DEFINES"
          CompilerFlags="$CXXFLAGS"
          OptimizationFlags="$CXXOPTIMFLAGS"
          DebugFlags="$CXXDEBUGFLAGS"
          IncludeFlags="$INCLUDE"
          LinkerExecutable="$LDXX"
          LinkerFlags="$LDFLAGS $LDTYPE"
          LinkerLibraries="$LINKLIBS"
          LinkerOptimizationFlags="$LDOPTIMFLAGS"
          LinkerDebugFlags="$LDDEBUGFLAGS"

          CompilerDefineFormatter="-D%s"
          LinkerLibrarySwitchFormatter="-l%s"
          LinkerPathFormatter="-L%s"
    />
    <vars
          CMDLINE1="$CXX -c $NVCC_FLAGS $CXXFLAGS $OPTIM $DEFINES $INCLUDE $SRC -o $OBJ"
          CMDLINE2="$LDXX $LDFLAGS $LDTYPE $LINKOPTIM $LINKEXPORTVER $OBJS $CXXLIBS $LINKLIBS -o $EXE"
          CMDLINE3="rm -f $OBJ"
          
          MATLABMEX="-DMATLAB_MEX_FILE"
          INCLUDE="-I&quot;$MATLABROOT/extern/include&quot;" 
       
          ARCH_FLAGS="XXX_ARCH_FLAGS"
          NVCC_FLAGS="--std=c++14 --default-stream per-thread --expt-extended-lambda --expt-relaxed-constexpr $ARCH_FLAGS"
          
          CXX="$NVCC"
          CFLAGS="--compiler-options=-fexceptions,-fPIC,-fno-omit-frame-pointer,-pthread,-fwrapv,-march=native"
          CXXFLAGS="$CFLAGS"
          DEFINES="--compiler-options=-D_GNU_SOURCE,$MATLABMEX"
          CXXOPTIMFLAGS="-O2 -DNDEBUG"
          CXXDEBUGFLAGS="-g"
                    
          LDXX="$GCC"
          LDFLAGS="-pthread -Wl,--no-undefined"
          LDTYPE="-shared"
          LDOPTIMFLAGS="-O2"
          LDDEBUGFLAGS="-g"
          
          LINKEXPORT="-Wl,--version-script,&quot;$MATLABROOT/extern/lib/$ARCH/mexFunction.map&quot;"
          LINKEXPORTVER="-Wl,--version-script,&quot;$MATLABROOT/extern/lib/$ARCH/c_exportsmexfileversion.map&quot;"
          LINKLIBS="-Wl,-rpath-link,$MATLABROOT/bin/$ARCH -L&quot;$MATLABROOT/bin/$ARCH&quot; -lmx -lmex -lmat -lm -lstdc++ "
  
          OBJEXT=".o"
          LDEXT=".mexa64"

          SETENV="CC=&quot;gcc&quot;
                CXX=&quot;$CXX&quot;
                CFLAGS=&quot;$CFLAGS $DEFINES&quot;
                CXXFLAGS=&quot;$CXXFLAGS $DEFINES&quot;
                COPTIMFLAGS=&quot;$COPTIMFLAGS&quot;                
                CXXOPTIMFLAGS=&quot;$CXXOPTIMFLAGS&quot;
                CDEBUGFLAGS=&quot;$CDEBUGFLAGS&quot;                
                CXXDEBUGFLAGS=&quot;$CXXDEBUGFLAGS&quot;                
                LD=&quot;$LD&quot;
                LDXX=&quot;$LDXX&quot;
                LDFLAGS=&quot;$LDFLAGS $LDTYPE $LINKLIBS $LINKEXPORT&quot;
                LDDEBUGFLAGS=&quot;$LDDEBUGFLAGS&quot;">
                
    </vars>
    <locationFinder>
        <NVCC>
            <or> <!-- Look for user-installed nvcc, otherwise use the shipped one -->
                <and>
                    <or>
                        <and> <!-- Search for nvcc in standard locations, favoring user variable MW_NVCC_PATH, but reject if it isn't the supported version -->
                            <or>
                                <and>
                                    <envVarExists name="MW_NVCC_PATH" />
                                    <fileExists name="$$/nvcc" />
                                </and>
                                <and>
                                    <envVarExists name="CUDA_BIN_PATH" />
                                    <fileExists name="$$/nvcc" />
                                </and>
                                <and>
                                    <envVarExists name="CUDA_PATH" />
                                    <fileExists name="$$/bin/nvcc" />
                                </and>
                                <cmdReturns name="which nvcc" />
                                <fileExists name="/usr/local/cuda/bin/nvcc" />
                            </or>
                            <cmdReturns name="$$/nvcc --version | egrep -E 'release XXX_CUDA_VER' > /dev/null && echo $$/nvcc" />
                        </and>
                        <fileExists name="/usr/local/cuda-XXX_CUDA_VER/bin/nvcc" /> <!-- Search the default install location -->
                    </or>
                    <cmdReturns name="$$/nvcc --version | egrep -E 'release XXX_CUDA_VER' > /dev/null && echo $$/nvcc" />
                </and>
                <fileExists name="$MATLABROOT/sys/cuda/glnxa64/cuda/bin/nvcc"/> <!-- No user-installed nvcc was found. Use the shipped -->
            </or>
        </NVCC>
        <GCC>
            <cmdReturns name="which g++" />
        </GCC>
        <CPPLIB_DIR>
            <cmdReturns name="g++ -print-file-name=libstdc++.so"
                        diagnostic="GCC appears to be installed, but supporting C++ libraries were not found.  You must first install the gcc-c++ package, or similiar, to complete this action."/>
        </CPPLIB_DIR>
        <VER>
            <cmdReturns name="g++ -dumpversion"/>
        </VER>
        <GCCDIR>
            <cmdReturns name="which g++" />
            <dirExists name="$$/../" />
        </GCCDIR>
        <GCC_TARGET>
            <cmdReturns name="g++ -dumpmachine" />
        </GCC_TARGET>
    </locationFinder>
</config>